<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LEDMatrixBluetooth.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LEDMatrixBluetooth.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060020: Last Updated: Sat Feb 13 20:27:56 2016
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; uart_init &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[75]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">BusFault_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[50]">CAN0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[51]">CAN0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[52]">CAN0_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[53]">CAN0_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[54]">CAN0_4_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[55]">CAN0_5_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[56]">CAN0_6_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[57]">CAN0_7_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[34]">CCU40_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[35]">CCU40_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[36]">CCU40_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[37]">CCU40_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[38]">CCU41_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[39]">CCU41_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[3a]">CCU41_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[3b]">CCU41_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[3c]">CCU42_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[3d]">CCU42_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[3e]">CCU42_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[3f]">CCU42_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[40]">CCU43_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[41]">CCU43_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[42]">CCU43_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[43]">CCU43_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[44]">CCU80_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[45]">CCU80_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[46]">CCU80_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[47]">CCU80_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[48]">CCU81_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[49]">CCU81_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[4a]">CCU81_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[4b]">CCU81_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[32]">DAC0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[33]">DAC0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[2a]">DSD0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[2b]">DSD0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[2c]">DSD0_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[2d]">DSD0_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[2e]">DSD0_4_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[2f]">DSD0_5_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[30]">DSD0_6_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[31]">DSD0_7_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[d]">ERU0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[e]">ERU0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[f]">ERU0_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[10]">ERU0_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[11]">ERU1_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[12]">ERU1_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[13]">ERU1_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[14]">ERU1_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[6f]">ETH0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[6b]">FCE0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[6c]">GPDMA0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[70]">GPDMA1_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[6a]">LEDTS0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[15]">PMU0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[4c]">POSIF0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[4d]">POSIF0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[4e]">POSIF1_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[4f]">POSIF1_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[73]">Reset_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[c]">SCU_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[6d]">SDMMC0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[71]">SystemInit</a> from system_xmc4500.o(i.SystemInit) referenced from startup_xmc4500.o(.text)
 <LI><a href="#[6e]">USB0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[58]">USIC0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[59]">USIC0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[5a]">USIC0_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[5b]">USIC0_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[5c]">USIC0_4_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[5d]">USIC0_5_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[5e]">USIC1_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[5f]">USIC1_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[60]">USIC1_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[61]">USIC1_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[62]">USIC1_4_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[63]">USIC1_5_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[64]">USIC2_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[65]">USIC2_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[66]">USIC2_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[67]">USIC2_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[68]">USIC2_4_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[69]">USIC2_5_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[16]">VADC0_C0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[17]">VADC0_C0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[18]">VADC0_C0_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[19]">VADC0_C0_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[1a]">VADC0_G0_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[1b]">VADC0_G0_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[1c]">VADC0_G0_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[1d]">VADC0_G0_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[1e]">VADC0_G1_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[1f]">VADC0_G1_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[20]">VADC0_G1_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[21]">VADC0_G1_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[22]">VADC0_G2_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[23]">VADC0_G2_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[24]">VADC0_G2_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[25]">VADC0_G2_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[26]">VADC0_G3_0_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[27]">VADC0_G3_1_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[28]">VADC0_G3_2_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[29]">VADC0_G3_3_IRQHandler</a> from startup_xmc4500.o(.text) referenced from startup_xmc4500.o(RESET)
 <LI><a href="#[74]">__main</a> from __main.o(!!!main) referenced from startup_xmc4500.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[74]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[76]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[78]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[a4]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a5]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[79]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[a6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[7f]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[a7]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[af]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[b0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[b1]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[84]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[bb]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[bc]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[bd]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[be]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[bf]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[c0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[c1]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[77]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[c2]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[7c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[7e]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[c3]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[80]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; uart_init &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[c4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[8a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[83]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[c5]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[85]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[73]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))

<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CAN0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>CAN0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>CAN0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CAN0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>CAN0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>CAN0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>CAN0_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CAN0_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>CCU40_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>CCU40_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CCU40_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CCU40_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CCU41_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CCU41_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CCU41_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CCU41_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CCU42_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CCU42_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CCU42_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CCU42_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>CCU43_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CCU43_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CCU43_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CCU43_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CCU80_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CCU80_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>CCU80_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>CCU80_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CCU81_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CCU81_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CCU81_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CCU81_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DAC0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DAC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DSD0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DSD0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DSD0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DSD0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DSD0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DSD0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DSD0_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DSD0_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERU0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>ERU0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>ERU0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ERU0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ERU1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ERU1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ERU1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ERU1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>ETH0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>FCE0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>GPDMA0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>GPDMA1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>LEDTS0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PMU0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>POSIF0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>POSIF0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>POSIF1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>POSIF1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SCU_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>SDMMC0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>USB0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USIC0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>USIC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>USIC0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>USIC0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USIC0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>USIC0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>USIC1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>USIC1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>USIC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>USIC1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>USIC1_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>USIC1_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>USIC2_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>USIC2_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>USIC2_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>USIC2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>USIC2_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>USIC2_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>VADC0_C0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>VADC0_C0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>VADC0_C0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>VADC0_C0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>VADC0_G0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>VADC0_G0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>VADC0_G0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>VADC0_G0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>VADC0_G1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>VADC0_G1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>VADC0_G1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>VADC0_G1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>VADC0_G2_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>VADC0_G2_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>VADC0_G2_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>VADC0_G2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>VADC0_G3_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>VADC0_G3_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>VADC0_G3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>VADC0_G3_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4500.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_xmc4500.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[87]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[c6]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[82]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[cd]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ce]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[cf]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>DriveDisplay</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, l0_matrix_driver.o(i.DriveDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBMatrixDriver
</UL>

<P><STRONG><a name="[8f]"></a>OSCHP_GetFrequency</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_xmc4500.o(i.OSCHP_GetFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[8b]"></a>RGBMatrixDriver</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, l0_matrix_driver.o(i.RGBMatrixDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RGBMatrixDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>SystemCoreClockSetup</STRONG> (Thumb, 488 bytes, Stack size 8 bytes, system_xmc4500.o(i.SystemCoreClockSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockSetup &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCHP_GetFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[90]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, system_xmc4500.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCHP_GetFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>

<P><STRONG><a name="[92]"></a>SystemCoreSetup</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, system_xmc4500.o(i.SystemCoreSetup))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[71]"></a>SystemInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, system_xmc4500.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SystemCoreClockSetup &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetup
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4500.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>XMC_GPIO_Init</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, xmc4_gpio.o(i.XMC_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = XMC_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[97]"></a>XMC_SCU_CLOCK_GetPeripheralClockFrequency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, xmc4_scu.o(i.XMC_SCU_CLOCK_GetPeripheralClockFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_SetBaudrate
</UL>

<P><STRONG><a name="[98]"></a>XMC_SCU_RESET_DeassertPeripheralReset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, xmc4_scu.o(i.XMC_SCU_RESET_DeassertPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_Enable
</UL>

<P><STRONG><a name="[93]"></a>XMC_UART_CH_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, xmc_uart.o(i.XMC_UART_CH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_SetBaudrate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[94]"></a>XMC_USIC_CH_Enable</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, xmc_usic.o(i.XMC_USIC_CH_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XMC_USIC_CH_Enable &rArr; XMC_USIC_Enable &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Init
</UL>

<P><STRONG><a name="[a3]"></a>XMC_USIC_CH_RXFIFO_Configure</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, xmc_usic.o(i.XMC_USIC_CH_RXFIFO_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = XMC_USIC_CH_RXFIFO_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[95]"></a>XMC_USIC_CH_SetBaudrate</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, xmc_usic.o(i.XMC_USIC_CH_SetBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_GetPeripheralClockFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Init
</UL>

<P><STRONG><a name="[96]"></a>XMC_USIC_Enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, xmc4_usic.o(i.XMC_USIC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = XMC_USIC_Enable &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_Enable
</UL>

<P><STRONG><a name="[99]"></a>framebuffer_update_1px</STRONG> (Thumb, 662 bytes, Stack size 44 bytes, l1_image_processing.o(i.framebuffer_update_1px))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = framebuffer_update_1px
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gamma_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelsFromUART
</UL>

<P><STRONG><a name="[9a]"></a>gamma_cor</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, l1_image_processing.o(i.gamma_cor))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framebuffer_update_1px
</UL>

<P><STRONG><a name="[9b]"></a>getPixelsFromUART</STRONG> (Thumb, 562 bytes, Stack size 24 bytes, l0_uart.o(i.getPixelsFromUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = getPixelsFromUART &rArr; framebuffer_update_1px
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_RXFIFO_IsEmpty
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_RXFIFO_GetLevel
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_RXFIFO_GetData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEmptyPanel
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framebuffer_update_1px
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>gpio_init</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, l0_gpio_init.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_init &rArr; XMC_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>initEmptyPanel</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, l1_image_processing.o(i.initEmptyPanel))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelsFromUART
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; uart_init &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelsFromUART
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEmptyPanel
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBMatrixDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a2]"></a>uart_init</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, l0_uart_init.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uart_init &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_RXFIFO_Configure
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[d2]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[d3]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9e]"></a>XMC_USIC_CH_RXFIFO_GetData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, l0_uart.o(i.XMC_USIC_CH_RXFIFO_GetData))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelsFromUART
</UL>

<P><STRONG><a name="[9d]"></a>XMC_USIC_CH_RXFIFO_GetLevel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l0_uart.o(i.XMC_USIC_CH_RXFIFO_GetLevel))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelsFromUART
</UL>

<P><STRONG><a name="[9c]"></a>XMC_USIC_CH_RXFIFO_IsEmpty</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l0_uart.o(i.XMC_USIC_CH_RXFIFO_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelsFromUART
</UL>

<P><STRONG><a name="[8e]"></a>delay</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system_xmc4500.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
